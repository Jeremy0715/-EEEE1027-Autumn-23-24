// Arduino Project – Contactless Distance Finder
// Let’s create a quick project to demonstrate how a simple ultrasonic sensor can be turned into a sophisticated contactless distance finder. 
// In this project we will be using a 16×2 Character LCD which displays a horizontal bar to represent the distance from the object.

// includes the LiquidCrystal Library
#include <LiquidCrystal.h> 

// includes the LcdBarGraph Library
#include <LcdBarGraph.h>

// Maximum distance we want to ping for (in centimeters).
#define max_distance 200

// Motor Control Constants
const int MOTOR_SPEED = 90;  // Adjust the motor speed as needed

// Creates an LCD object. Parameters: (rs, enable, d4, d5, d6, d7)
LiquidCrystal lcd(8, 9, 4, 5, 6, 7); 

LcdBarGraph lbg(&lcd, 16, 0, 1); // Creates an LCD Bargraph object.

// Pin Definitions
const int IN1 = 2;
const int IN2 = 3;
const int IN3 = 12;
const int IN4 = 11;

const int trigPin = 13;
const int echoPin = 1;
long duration;
int distance;

void setup() 
{
	lcd.begin(16,2); // Initializes the interface to the LCD screen
	
	pinMode(trigPin, OUTPUT);
	pinMode(echoPin, INPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
}

void loop() 
{
  controlMotors();
	// Write a pulse to the HC-SR04 Trigger Pin
	digitalWrite(trigPin, LOW);
	delayMicroseconds(2);
	digitalWrite(trigPin, HIGH);
	delayMicroseconds(10);
	digitalWrite(trigPin, LOW);
	
	// Measure the response from the HC-SR04 Echo Pin
	duration = pulseIn(echoPin, HIGH);
	
	// Determine distance from duration
	// Use 343 metres per second as speed of sound
	distance= duration*0.034/2;
	
	// Prints "Distance: <value>" on the first line of the LCD
	lcd.setCursor(0,0);
	lcd.print("Distance: "); 
	lcd.print(distance);
	lcd.print(" cm");

  // Turn right if the distance is less than 15 cm
  if (distance < 15) {
    stopmotor();
  } else {
    // Draws bargraph on the second line of the LCD
    lcd.setCursor(0, 1);
    lbg.drawValue(distance, max_distance);
  }
  
  delay(250);
}

void stopmotor() {
  // Turn right
  analogWrite(IN1, 0);
  analogWrite(IN2, 0);
  analogWrite(IN3, 0);
  analogWrite(IN4, 0);
}

void controlMotors() {
  // Motor control logic

  // Move forward
  analogWrite(IN1, 0);
  analogWrite(IN2, MOTOR_SPEED);
  analogWrite(IN3, 0);
  analogWrite(IN4, MOTOR_SPEED);
}
